[project]
name = "studiohub-backend"
version = "1.0.0"
description = "StudioHub Backend API - Design Studio Orchestration Platform"
readme = "README.md"
authors = [
    {name = "Estudio Baum Arquitectos"}
]
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.5",
    "boto3>=1.40.29",
    "celery>=5.5.3",
    "email-validator>=2.3.0",
    "fastapi>=0.116.1",
    "passlib[bcrypt]>=1.7.4",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.10.1",
    "python-multipart>=0.0.20",
    "redis>=6.4.0",
    "sqlalchemy>=2.0.43",
    "strenum>=0.4.15",
    "uvicorn>=0.35.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.13.0",           # Linting and formatting
]
test = [
    "pytest>=8.4.2",         # Testing framework
    "pytest-asyncio>=1.2.0", # Async test support
    "pytest-cov>=7.0.0",     # Coverage reporting
    "httpx>=0.28.1",          # HTTP client for API testing
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]  # Line too long (handled by formatter)

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=app --cov-report=term-missing --cov-report=xml"
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
